#<vertex shader>

#version 330 core
layout(location = 0) in vec3 position;
layout(location = 1) in vec3 vertex_color;
layout(location = 2) in vec2 texture_coordinates;
out vec3 color;
out vec2 tex_coords;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main(){
	color = vertex_color;
	tex_coords = texture_coordinates;
	//gl_Position = model * view * projection * vec4(position.x, position.y, 1, 1);
	gl_Position = projection * view * model * vec4(position.x, position.y, position.z, 1);
}

#<fragment shader>

#version 330 core
layout(location = 0) out vec4 frag_color;
in vec3 color;
in vec2 tex_coords;

uniform vec4 u_color;
uniform sampler2D texture_slot;
void main(){
	frag_color = texture(texture_slot, tex_coords) + vec4(color.x, color.y, color.z, 1.0f) + u_color;
}